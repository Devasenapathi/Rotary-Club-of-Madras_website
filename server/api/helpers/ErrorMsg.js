exports.ErrorMessage = {
    email: {
        required: "Field is Required",
        validation: "Not a Valid Email",
    },
    name: {
        required: "Field is Required",
        validation: "Not a Valid Name",
    },
    mobileNumber: {
        required: "Field is Required",
        validation: "Not a Valid Mobile Number",
    },
    password: {
        required: "Field is Required",
        validation: "Not a Valid Password",
    },
    id: {
        required: "Field is Required",
        validation: "Not a Valid Id",
    },
    general: {
        required: "Field is Required",
        validation: "Not a valid value",
    },
};

exports.responseErrors = {
    200: "OK",
    201: "Successfully created",
    204: "No content Found",
    400: "Bad Request",
    401: "Invalid credentials",
    403: "Forbidden",
    402: "Email not found",
    422: "Validation failed",
};

exports.alreadyExist = Object.freeze({
    materialUsageType: "Material Usage Type already exist !",
    partName: "Part Name already exist !",
    partNo: "Part No already exist !",
    role: "Role already exist !",
    mobile: "Mobile already exist !",
    email: "Email already exist !",
    packingType: "Packing Type already exist !",
    moc: "moc already exist !",
    subCategory: "SubCategory already exist !",
    boughtout: "Bought Out already exist !",
    lubricationType: "Lubrication Type already exist !",
    materialgradecode: "Material Grade Code already exist !",
    materialId: "Material Id already exist !",
    coreBoxType: "Core Box Type already exist !",
    reasonNo: "Reason No. already exist !",
    operationName: "Operation Name or Operation Id already exist !",
    operationId: "Operation Id already exist !",
    partSize: "Part Size Description For this PartName already exist !",
    pumpModel: "Pump Model already exist !",
    module: "Module already exist !",
    subModule: "Sub Module already exist !",
    gstType: "Gst Type already exist !",
    mouldingType: "Moulding Type already exist !",
    mountingType: "Mounting Type already exist !",
    patternCastingType: "Pattern CastingType already exist !",
    cusName: "CustomerName or mobile or mailId already exist !",
    customerPO: "Customer PO already exist !",
    design: "Design already exist !",
    internalPartCode: "All Ready exist!",
    pumpModel: "Pump Model already exist",
    subDesign: " Sub Design already exist",
    duplicate: "Duplicate  stock Number !!!"

});

exports.clientError = Object.freeze({
    savedSuccessfully: "Saved Successfully",
    updateSuccessfully: "Updated Successfully",
    fetachSuccessfully: "Get Record Successfully",
    deletedSuccessfully: "Deleted Successfully",
    userExist: "User already exist !",
    invalidRequest: "Invalid Request",
    emailExist: "User already exist for given email",
    inputRequird: "Input is required",
    loginSuccess: "You have been successfully logged in",
    internalServer: "Internal Server Error",
    fieldValidation: "Field Validation Failed",
    UserNotFound: "You are not registered with us !",
    invalidPassword: "Password is incorrect",
    invalidEmail: "Email is incorrect",
    noData: "No data found",
    noStripeId: "User dont have Stripe Id",
    loggedOut: "You have been Successfully logged out",
    invalidJSON: "Error in parsing JSON",
    success: "Everything is fine",
    ScheduleError: "Schedule type is required",
    notArray: "contact list not an array",
    invalidUserId: "Invalid userid ",
    tokenExpire: "Your Token has been Expired",
    tokenUserd: "Your Token is already used",
    invalidType: "Invalid type",
    passwordNotMatched: "Old password not matched",
    settingUpdate: "setting updated successfully!",
    logoutSuccess: "logout successfully",
    deleteSuccess: "Deleted successfully",
    internalPartCode: "Saved Successfully",
    internalPartCode: "Upadated Successfully",
    productMaster: "Already use in product Master",
    sessionExpire: "Session Expired!",
    code: {
        successCode: 200,
    },
});
